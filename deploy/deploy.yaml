apiVersion: v1
kind: ServiceAccount
metadata:
  name: admission-registry-sa

--- # rbac
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: admission-registry-role
rules:
- apiGroups: ["*"]
  resources: ["validatingwebhookconfigurations","mutatingwebhookconfigurations"]
  verbs: ["admissionregistration.k8s.io"]

--- #ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admission-registry-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admission-registry-clusterrole
subjects:
- kind: ServiceAccount
  name: admission-registry-sa
  namespace: default

---
apiVserion: apps/v1
kind: Deployment
metadata:
  name: admission-registry
  labels:
    app: admission-registry
spec:
  selector:
    matchLabels:
      app: admission-registry
  template:
    metadata:
      labels:
        app: admission-registry
    spec:
      serviceAccountName: admission-registry
      initContainers: # 自动生成证书
      - name: webhook-init
        image: tomyang2024/admision-registry-tls:v0.0.1
        imagePullPolicy: IfNotPresent
        env:
        - name: WEBHOOK_NAMESPACE
          value: default
        - name: VALIDATE_COFING
          value: admission-registry
        - name: MUTATE_CONFIG
          value: admission-registry-mutate
        - name: VALIDATE_PATH
          value: "/validate"
        - name: MUTATE_PATH
          value: "/mutate"
        - name: WEBHOOK_SERVICE
          value: admission-registry
        volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook/certs
      containers:
      - name: whitelist
        image: cnych/admission-registry:0.1
        imagePullPolicy: IfNotPresent
        env:
        - name: WHITE_LIST_REGISRY
          value: "docker.io,gcr.io"
        ports:
        - containerPort: 443
        volumeMounts:
        - name: webhook-certs
          mountPath: /etc/webhook/certs
      volumes:
      - name: webhook-certs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: admission-registry
  labels:
    app: admission-registry
spec:
  ports:
  - port: 443
    targetPort: 443
  selector:
    app: admission-registry